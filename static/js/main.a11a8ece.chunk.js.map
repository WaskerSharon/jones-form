{"version":3,"sources":["Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["schema","z","firstName","min","refine","s","match","lastName","email","message","phoneNumber","max","Form","useForm","resolver","zodResolver","register","handleSubmit","errors","formState","onSubmit","values","console","log","className","htmlFor","type","name","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAOMA,EAASC,IAAS,CACpBC,UAAWD,MAAWE,IAAI,GAAGC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,MAAM,mBACjDC,SAAUN,MAAWE,IAAI,GAAGC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,MAAM,mBAChDE,MAAOP,MAAWO,MAAM,CAAEC,QAAS,qCACnCC,YAAaT,MAAWU,IAAI,EAAG,CAAEF,QAAS,uDAI/B,SAASG,IAAQ,IAAD,QAEvB,EAIIC,YAAQ,CACVC,SAAUC,YAAYf,KAJtBgB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OASbE,EAAWH,GAAa,SAACI,GAC3BC,QAAQC,IAAIF,MAGhB,OACI,qBAAKG,UAAU,eAAf,SACI,uBAAMA,UAAU,OAAOJ,SAAUH,EAAaG,GAA9C,UACI,oBAAII,UAAU,aAAd,wBAEA,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,uBAAOC,QAAQ,YAAYD,UAAU,aAArC,wBACA,mCACIE,KAAK,OACLC,KAAK,YACLC,GAAG,YACHJ,UAAU,cACNR,EAAS,eAEjB,oBAAGQ,UAAU,aAAb,wBAA6BN,EAAOhB,iBAApC,aAA6B,EAAkBO,QAA/C,UAGJ,sBAAKe,UAAU,oBAAf,UACI,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,uBACA,mCACIE,KAAK,OACLC,KAAK,WACLC,GAAG,WACHJ,UAAU,cACNR,EAAS,cAEjB,oBAAGQ,UAAU,aAAb,wBAA6BN,EAAOX,gBAApC,aAA6B,EAAiBE,QAA9C,UAIJ,sBAAKe,UAAU,iBAAf,UACI,uBAAOC,QAAQ,QAAQD,UAAU,aAAjC,0BACA,mCACIE,KAAK,QACLC,KAAK,QACLC,GAAG,QACHJ,UAAU,cACNR,EAAS,WAEjB,oBAAGQ,UAAU,aAAb,wBAA6BN,EAAOV,aAApC,aAA6B,EAAcC,QAA3C,UAIJ,sBAAKe,UAAU,uBAAf,UACI,uBAAOC,QAAQ,cAAcD,UAAU,aAAvC,0BACA,mCACIE,KAAK,OACLC,KAAK,cACLC,GAAG,cACHJ,UAAU,cACNR,EAAS,iBAEjB,oBAAGQ,UAAU,aAAb,wBAA6BN,EAAOR,mBAApC,aAA6B,EAAoBD,QAAjD,aAKR,wBAAQiB,KAAK,SAASF,UAAU,aAAhC,uB,MC9EDK,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACI,cAACZ,EAAD,OCIOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.a11a8ece.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport * as z  from \"zod\";\r\n\r\nimport \"./form.css\";\r\n\r\nconst schema = z.object({\r\n    firstName: z.string().min(2).refine(s => s.match(/^[-a-zA-Z]*$/)),\r\n    lastName: z.string().min(2).refine(s => s.match(/^[-a-zA-Z]*$/)),\r\n    email: z.string().email({ message: \"This is an invalid email address\" }),\r\n    phoneNumber: z.number().max(5, { message: \"this👏is👏too👏big\" })\r\n    // phoneNumber: z.string().min(2).refine(s => s.match(/^[0-9]*$/)).refine((val) => val > 5, { message: \"Input is too short\" }),\r\n})\r\n\r\nexport default function Form() {\r\n\r\n        const {\r\n          register,\r\n          handleSubmit,\r\n          formState: { errors },\r\n        } = useForm({\r\n          resolver: zodResolver(schema),\r\n        });\r\n\r\n    // const onSubmit = (data) => {\r\n    //     console.log(data);\r\n    // }\r\n\r\n    const onSubmit = handleSubmit((values) => {\r\n        console.log(values)\r\n      })\r\n\r\n    return (\r\n        <div className=\"form-contain\">\r\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 className=\"form-title\">Jones Form</h1>\r\n\r\n                <div className=\"form-inputs\">\r\n                    <div className=\"first-name-contain\">\r\n                        <label htmlFor=\"firstName\" className=\"form-label\" >First Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            className=\"form-input\"\r\n                            {...register('firstName')}\r\n                        />\r\n                        <p className=\"form-error\"> { errors.firstName?.message } </p>\r\n                    </div>\r\n\r\n                    <div className=\"last-name-contain\">\r\n                        <label htmlFor=\"lastName\" className=\"form-label\" >Last Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            className=\"form-input\"\r\n                            {...register('lastName')}\r\n                        />\r\n                        <p className=\"form-error\"> { errors.lastName?.message } </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"e-mail-contain\">\r\n                        <label htmlFor=\"email\" className=\"form-label\" >Mail Address</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-input\"\r\n                            {...register('email')}\r\n                        />\r\n                        <p className=\"form-error\"> { errors.email?.message } </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"phone-number-contain\">\r\n                        <label htmlFor=\"phoneNumber\" className=\"form-label\" >Phone Number</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            className=\"form-input\"\r\n                            {...register('phoneNumber')}\r\n                        />\r\n                        <p className=\"form-error\"> { errors.phoneNumber?.message } </p>\r\n\r\n                    </div>\r\n                </div>\r\n              \r\n                <button type=\"submit\" className=\"submit-btn\">SEND</button> \r\n            </form>\r\n        </div>\r\n    )\r\n};","\nimport React from 'react';\nimport Form from \"./Components/Form\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Form />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}