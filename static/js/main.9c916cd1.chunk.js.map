{"version":3,"sources":["Components/Form/Form.js","Components/FormSuccess/FormSuccess.js","App.js","reportWebVitals.js","index.js"],"names":["schema","z","firstName","min","message","refine","s","match","lastName","mailAddress","email","phoneNumber","length","Form","history","useHistory","useForm","resolver","zodResolver","register","handleSubmit","errors","formState","className","id","onSubmit","e","emailjs","sendForm","then","result","console","log","text","error","document","getElementById","reset","push","htmlFor","type","name","SuccessForm","src","process","alt","to","App","path","exact","component","FormSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9c916cd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport * as z  from \"zod\";\r\nimport emailjs from 'emailjs-com';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./form.css\";\r\n\r\nconst schema = z.object ({\r\n    firstName: \r\n        z.string()\r\n        .min ( 2, { message: \"First name should be at least 2 characters\" } )\r\n        .refine ( s => s.match ( /^[-a-zA-Z]*$/ ) ),\r\n\r\n    lastName: \r\n        z.string()\r\n        .min ( 2, { message: \"Last name should be at least 2 characters\" } )\r\n        .refine ( s => s.match ( /^[-a-zA-Z]*$/ ) ),\r\n\r\n    mailAddress: \r\n        z.string()\r\n        .email ( { message: \"This is an invalid e-mail address\" } ),\r\n\r\n    phoneNumber: \r\n        z.string()\r\n        .length ( 10, { message: \"Phone number should be 10 characters\" } )\r\n        .refine ( s => s.match (/^[0-9]*$/) ),\r\n})\r\n\r\nfunction Form() {\r\n    \r\n    const history = useHistory();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm ({\r\n        resolver: zodResolver(schema),\r\n    });\r\n\r\n    function sendEmail (e) {\r\n        emailjs.sendForm('service_0enz2y6', 'template_erk2dls', '#form', 'user_s69tW4xngZ4shJTShUIww')\r\n          .then (( result ) => {\r\n              console.log ( result.text );\r\n          }, ( error ) => {\r\n              console.log ( error.text );\r\n          });\r\n          document.getElementById ( \"form\" ).reset();\r\n          history.push('/form-success');\r\n      };\r\n\r\n\r\n    return (\r\n        <div className=\"form-contain\">\r\n            <form id=\"form\" className=\"form\" onSubmit= { handleSubmit ( sendEmail ) }>\r\n                <h1 className=\"form-title\">Jones Form</h1>\r\n\r\n                <div className=\"form-inputs\">\r\n                    <div className=\"first-name-contain\">\r\n                        <label htmlFor=\"firstName\" className=\"form-label\" >First Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            className=\"form-input\"\r\n                            { ...register ( 'firstName' ) }\r\n                        />\r\n                        <p className=\"form-error\"> { errors.firstName?.message } </p>\r\n                    </div>\r\n\r\n                    <div className=\"last-name-contain\">\r\n                        <label htmlFor=\"lastName\" className=\"form-label\" >Last Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            className=\"form-input\"\r\n                            { ...register ( 'lastName' ) }\r\n                        />\r\n                        <p className=\"form-error\"> { errors.lastName?.message } </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"e-mail-contain\">\r\n                        <label htmlFor=\"mailAddress\" className=\"form-label\" >Mail Address</label>\r\n                        <input\r\n                            type=\"mailAddress\"\r\n                            name=\"mailAddress\"\r\n                            id=\"mailAddress\"\r\n                            className=\"form-input\"\r\n                            { ...register ( 'mailAddress' ) }\r\n                        />\r\n                        <p className=\"form-error\"> { errors.mailAddress?.message } </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"phone-number-contain\">\r\n                        <label htmlFor=\"phoneNumber\" className=\"form-label\" >Phone Number</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            className=\"form-input\"\r\n                            { ...register ( 'phoneNumber' ) }\r\n                        />\r\n                        <p className=\"form-error\"> { errors.phoneNumber?.message } </p>\r\n\r\n                    </div>\r\n                </div>\r\n              \r\n                <button type=\"submit\" className=\"btn submit-btn\">SEND</button> \r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport './formSuccess.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function SuccessForm() {\r\n    \r\n    return (\r\n        <div className=\"wraper\">\r\n            <img className=\"success-img\" src={process.env.PUBLIC_URL + '/success.png'} alt=\"hurrah\" /> \r\n            <div className=\"text-wraper\">\r\n                <h2>Thanks!</h2>\r\n                <h3>Your submition has been received { \":)\" } </h3>\r\n            </div>\r\n\r\n            <button className=\"btn back-to-btn\" >\r\n                <Link to=\"/jones-form\">\r\n                    Back to form\r\n                </Link>\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n","\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Form from './Components/Form/Form'\nimport FormSuccess from './Components/FormSuccess/FormSuccess';\n\nexport default function App() {\n  return (\n    <Router className=\"App\">\n      <div>\n        <Switch>\n          <Route path='/jones-form' exact component={Form}/>\n          <Route path='/form-success' exact component={FormSuccess}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}