{"version":3,"sources":["useForm.jsx","components/form/Form.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useForm","useState","firstName","lastName","mailAdress","phoneNumber","values","setValues","handleChange","e","target","name","value","Form","className","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAuBeA,EArBC,WACZ,MAA4BC,mBAAS,CACjCC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,YAAa,KAJjB,mBAAOC,EAAP,KAAeC,EAAf,KAOA,EAA4BN,mBAAS,IAArC,6BAUA,MAAO,CAAEO,aARY,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAU,2BACHD,GADE,kBAEJK,EAAOC,MAION,W,OCjBZ,SAASO,IAEpB,MAAiCb,IAAzBQ,EAAR,EAAQA,aAAcF,EAAtB,EAAsBA,OAGtB,OACI,sBAAKQ,UAAU,eAAf,UACI,oBAAIA,UAAU,aAAd,wBACA,uBAAMA,UAAU,OAAhB,UACI,uBACIC,KAAK,OACLJ,KAAK,YACLG,UAAU,aACVE,YAAY,aACZJ,MAAON,EAAOJ,UACde,SAAUT,IAGd,uBACIO,KAAK,OACLJ,KAAK,WACLG,UAAU,aACVE,YAAY,YACZJ,MAAON,EAAOH,SACdc,SAAUT,IAGd,uBACIO,KAAK,OACLJ,KAAK,aACLG,UAAU,aACVE,YAAY,cACZJ,MAAON,EAAOF,WACda,SAAUT,IAGd,uBACIO,KAAK,OACLJ,KAAK,cACLG,UAAU,aACVE,YAAY,eACZJ,MAAON,EAAOD,YACdY,SAAUT,IAGd,wBAAQO,KAAK,SAASD,UAAU,aAAhC,wBClCDI,MAVf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACD,EAAD,SCIOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2be65068.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = () => {\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        mailAdress: '',\r\n        phoneNumber: '',\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    return { handleChange, values };    \r\n};\r\n\r\nexport default useForm;\r\n\r\n","import \"./form.css\";\r\nimport useForm from \"../../useForm\";\r\n\r\nexport default function Form() {\r\n\r\n    const { handleChange, values } = useForm();\r\n        \r\n\r\n    return (\r\n        <div className=\"form-section\">\r\n            <h1 className=\"form-title\">Jones Form</h1>\r\n            <form className=\"form\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    className=\"form-input\"\r\n                    placeholder=\"First Name\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    className=\"form-input\"\r\n                    placeholder=\"Last Name\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mailAdress\"\r\n                    className=\"form-input\"\r\n                    placeholder=\"Mail Adress\"\r\n                    value={values.mailAdress}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    className=\"form-input\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={values.phoneNumber}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"submit-btn\" >SEND</button>\r\n                {/* <span></span> */}\r\n            </form>\r\n        </div>\r\n    )\r\n};","import './App.css';\n\nimport Form from \"./components/form/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Form />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}